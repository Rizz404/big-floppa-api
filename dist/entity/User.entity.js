Object.defineProperty(exports,"__esModule",{value:true});function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{User:function(){return User},UserRole:function(){return UserRole}});const _typeorm=require("typeorm");const _Profileentity=require("./Profile.entity");const _Catentity=require("./Cat.entity");const _CatBreedentity=require("./CatBreed.entity");const _UserAddressentity=require("./UserAddress.entity");const _Cartentity=require("./Cart.entity");const _Transactionentity=require("./Transaction.entity");const _Orderentity=require("./Order.entity");function _ts_decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r}var UserRole;(function(UserRole){UserRole["ADMIN"]="ADMIN";UserRole["USER"]="USER"})(UserRole||(UserRole={}));class User{id;oauthId;username;email;password;role;isOauth;lastLogin;isVerified;createdAt;updatedAt;userAddreses;profile;cart;cats;catBreeds;buyerTransactions;sellerTransactions;orders}_ts_decorate([(0,_typeorm.PrimaryGeneratedColumn)("uuid")],User.prototype,"id",void 0);_ts_decorate([(0,_typeorm.Index)({unique:true}),(0,_typeorm.Column)({type:"varchar",nullable:true})],User.prototype,"oauthId",void 0);_ts_decorate([(0,_typeorm.Index)({unique:true}),(0,_typeorm.Column)({type:"varchar",length:50})],User.prototype,"username",void 0);_ts_decorate([(0,_typeorm.Index)({unique:true}),(0,_typeorm.Column)({type:"varchar"})],User.prototype,"email",void 0);_ts_decorate([(0,_typeorm.Column)({type:"varchar",nullable:true,length:255})],User.prototype,"password",void 0);_ts_decorate([(0,_typeorm.Column)({type:"enum",enum:UserRole,default:"USER"})],User.prototype,"role",void 0);_ts_decorate([(0,_typeorm.Column)({type:"bool",default:false})],User.prototype,"isOauth",void 0);_ts_decorate([(0,_typeorm.Column)({type:"date",nullable:true})],User.prototype,"lastLogin",void 0);_ts_decorate([(0,_typeorm.Column)({type:"bool",default:false})],User.prototype,"isVerified",void 0);_ts_decorate([(0,_typeorm.CreateDateColumn)()],User.prototype,"createdAt",void 0);_ts_decorate([(0,_typeorm.UpdateDateColumn)()],User.prototype,"updatedAt",void 0);_ts_decorate([(0,_typeorm.OneToMany)(()=>_UserAddressentity.UserAddress,userAddres=>userAddres.user)],User.prototype,"userAddreses",void 0);_ts_decorate([(0,_typeorm.OneToOne)(()=>_Profileentity.Profile,profile=>profile.user)],User.prototype,"profile",void 0);_ts_decorate([(0,_typeorm.OneToOne)(()=>_Cartentity.Cart,cart=>cart.user)],User.prototype,"cart",void 0);_ts_decorate([(0,_typeorm.OneToMany)(()=>_Catentity.Cat,cat=>cat.user)],User.prototype,"cats",void 0);_ts_decorate([(0,_typeorm.OneToMany)(()=>_CatBreedentity.CatBreed,catBreed=>catBreed.author)],User.prototype,"catBreeds",void 0);_ts_decorate([(0,_typeorm.OneToMany)(()=>_Transactionentity.Transaction,transaction=>transaction.buyer)],User.prototype,"buyerTransactions",void 0);_ts_decorate([(0,_typeorm.OneToMany)(()=>_Transactionentity.Transaction,transaction=>transaction.seller)],User.prototype,"sellerTransactions",void 0);_ts_decorate([(0,_typeorm.OneToMany)(()=>_Orderentity.Order,order=>order.user)],User.prototype,"orders",void 0);User=_ts_decorate([(0,_typeorm.Entity)()],User);
//# sourceMappingURL=User.entity.js.map