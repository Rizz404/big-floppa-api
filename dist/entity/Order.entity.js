Object.defineProperty(exports,"__esModule",{value:true});function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{Order:function(){return Order},OrderStatus:function(){return OrderStatus}});const _typeorm=require("typeorm");const _Userentity=require("./User.entity");const _ShippingServiceentity=require("./ShippingService.entity");const _Transactionentity=require("./Transaction.entity");const _Catentity=require("./Cat.entity");function _ts_decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r}var OrderStatus;(function(OrderStatus){OrderStatus["PACKAGING"]="PACKAGING";OrderStatus["SHIPPED"]="SHIPPED";OrderStatus["DELIVERED"]="DELIVERED";OrderStatus["RECEIVED"]="RECEIVED"})(OrderStatus||(OrderStatus={}));class Order{id;status;amount;createdAt;updatedAt;user;cat;shippingService;transaction}_ts_decorate([(0,_typeorm.PrimaryGeneratedColumn)("uuid")],Order.prototype,"id",void 0);_ts_decorate([(0,_typeorm.Column)({type:"enum",enum:OrderStatus,default:"PACKAGING"})],Order.prototype,"status",void 0);_ts_decorate([(0,_typeorm.Column)({type:"int",default:1})],Order.prototype,"amount",void 0);_ts_decorate([(0,_typeorm.CreateDateColumn)()],Order.prototype,"createdAt",void 0);_ts_decorate([(0,_typeorm.UpdateDateColumn)()],Order.prototype,"updatedAt",void 0);_ts_decorate([(0,_typeorm.ManyToOne)(()=>_Userentity.User,user=>user.orders)],Order.prototype,"user",void 0);_ts_decorate([(0,_typeorm.ManyToOne)(()=>_Catentity.Cat,cat=>cat.orders)],Order.prototype,"cat",void 0);_ts_decorate([(0,_typeorm.ManyToOne)(()=>_ShippingServiceentity.ShippingService,shippingService=>shippingService.orders)],Order.prototype,"shippingService",void 0);_ts_decorate([(0,_typeorm.ManyToOne)(()=>_Transactionentity.Transaction,transaction=>transaction.orders)],Order.prototype,"transaction",void 0);Order=_ts_decorate([(0,_typeorm.Entity)()],Order);
//# sourceMappingURL=Order.entity.js.map