{"version":3,"sources":["../../src/utils/getErrorMessage.ts"],"sourcesContent":["import { ValidationError } from \"class-validator\";\r\n\r\nconst getErrorMessage = (error: unknown) => {\r\n  let message: string | { [x: string]: string }[];\r\n\r\n  if (error instanceof Error) {\r\n    message = error.message;\r\n  } else if (error && typeof error === \"object\" && \"message\" in error) {\r\n    message = String(error.message);\r\n  } else if (typeof error === \"string\") {\r\n    message = error;\r\n  } else if (\r\n    Array.isArray(error) &&\r\n    error.every((err) => err instanceof ValidationError)\r\n  ) {\r\n    message = error.map((err) => {\r\n      const constraints = err.constraints\r\n        ? Object.values(err.constraints).join(\", \")\r\n        : \"Validation error\";\r\n      return { [err.property]: constraints };\r\n    });\r\n  } else {\r\n    message = \"An unknown error has occurred\";\r\n  }\r\n\r\n  return message;\r\n};\r\n\r\nexport default getErrorMessage;\r\n"],"names":["getErrorMessage","error","message","Error","String","Array","isArray","every","err","ValidationError","map","constraints","Object","values","join","property"],"mappings":"uFA4BA,iDAAA,0CA5BgC,mBAEhC,MAAMA,gBAAkB,AAACC,QACvB,IAAIC,QAEJ,GAAID,iBAAiBE,MAAO,CAC1BD,QAAUD,MAAMC,OAAO,AACzB,MAAO,GAAID,OAAS,OAAOA,QAAU,UAAY,YAAaA,MAAO,CACnEC,QAAUE,OAAOH,MAAMC,OAAO,CAChC,MAAO,GAAI,OAAOD,QAAU,SAAU,CACpCC,QAAUD,KACZ,MAAO,GACLI,MAAMC,OAAO,CAACL,QACdA,MAAMM,KAAK,CAAC,AAACC,KAAQA,eAAeC,+BAAe,EACnD,CACAP,QAAUD,MAAMS,GAAG,CAAC,AAACF,MACnB,MAAMG,YAAcH,IAAIG,WAAW,CAC/BC,OAAOC,MAAM,CAACL,IAAIG,WAAW,EAAEG,IAAI,CAAC,MACpC,mBACJ,MAAO,CAAE,CAACN,IAAIO,QAAQ,CAAC,CAAEJ,WAAY,CACvC,EACF,KAAO,CACLT,QAAU,+BACZ,CAEA,OAAOA,OACT,QAEA,SAAeF"}