{"version":3,"sources":["../../src/utils/paginatedResponse.ts"],"sourcesContent":["export interface PaginationState {\r\n  totalData: number;\r\n  dataPerpage: number;\r\n  currentPage: number;\r\n  totalPages: number;\r\n  startIndex: number;\r\n  endIndex: number;\r\n  hasNextPage: boolean;\r\n  hasPrevPage: boolean;\r\n}\r\n\r\nexport interface PaginatedResponse<T> {\r\n  paginationState: PaginationState;\r\n  data: T[];\r\n  additionalInfo?: Record<string, any>;\r\n}\r\n\r\nconst paginatedResponse = <T>(\r\n  data: T[],\r\n  page: number,\r\n  limit: number,\r\n  totalData: number,\r\n  additionalInfo?: Record<string, any>\r\n) => {\r\n  const totalPages = Math.ceil(totalData / limit);\r\n  const startIndex = (page - 1) * limit + 1;\r\n  const endIndex = page * limit > totalData ? totalData : page * limit;\r\n\r\n  const paginationState: PaginationState = {\r\n    totalData,\r\n    dataPerpage: limit,\r\n    currentPage: page,\r\n    totalPages,\r\n    startIndex,\r\n    endIndex,\r\n    hasNextPage: page < totalPages,\r\n    hasPrevPage: page > 1,\r\n  };\r\n\r\n  const response: PaginatedResponse<T> = {\r\n    data,\r\n    paginationState,\r\n    additionalInfo,\r\n  };\r\n\r\n  return response;\r\n};\r\n\r\nexport default paginatedResponse;\r\n"],"names":["paginatedResponse","data","page","limit","totalData","additionalInfo","totalPages","Math","ceil","startIndex","endIndex","paginationState","dataPerpage","currentPage","hasNextPage","hasPrevPage","response"],"mappings":"uFAgDA,iDAAA,YA/BA,MAAMA,kBAAoB,CACxBC,KACAC,KACAC,MACAC,UACAC,kBAEA,MAAMC,WAAaC,KAAKC,IAAI,CAACJ,UAAYD,OACzC,MAAMM,WAAa,AAACP,CAAAA,KAAO,CAAA,EAAKC,MAAQ,EACxC,MAAMO,SAAWR,KAAOC,MAAQC,UAAYA,UAAYF,KAAOC,MAE/D,MAAMQ,gBAAmC,CACvCP,UACAQ,YAAaT,MACbU,YAAaX,KACbI,WACAG,WACAC,SACAI,YAAaZ,KAAOI,WACpBS,YAAab,KAAO,CACtB,EAEA,MAAMc,SAAiC,CACrCf,KACAU,gBACAN,cACF,EAEA,OAAOW,QACT,QAEA,SAAehB"}