{"version":3,"sources":["../../src/controllers/catBreed.controller.ts"],"sourcesContent":["import { Request, Response } from \"express\";\r\nimport myDataSource from \"../config/data-source\";\r\nimport getErrorMessage from \"../utils/getErrorMessage\";\r\nimport { CatBreed } from \"../entity/CatBreed.entity\";\r\nimport BaseReqQuery from \"../helpers/base.req.query.type\";\r\nimport paginatedResponse from \"../utils/paginatedResponse\";\r\n\r\ninterface BreedQuery extends BaseReqQuery {}\r\n\r\nclass CatBreedController {\r\n  private catBreedRepostory = myDataSource.getRepository(CatBreed);\r\n\r\n  public createCatBreed = async (req: Request, res: Response) => {\r\n    try {\r\n      const catBreedData: Partial<CatBreed> = req.body;\r\n\r\n      const newCatBreed = this.catBreedRepostory.create(catBreedData);\r\n\r\n      await this.catBreedRepostory.save(newCatBreed);\r\n\r\n      res.status(201).json({ message: \"Cat race created\", data: newCatBreed });\r\n    } catch (error) {\r\n      // todo: Buat type error\r\n      res.status(500).json({ message: getErrorMessage(error) });\r\n    }\r\n  };\r\n\r\n  public getCatBreeds = async (req: Request, res: Response) => {\r\n    try {\r\n      const {\r\n        page = 1,\r\n        limit = 10,\r\n        order = \"desc\",\r\n      } = req.query as unknown as BreedQuery;\r\n      const skip = (+page - 1) * +limit;\r\n\r\n      const totalData = await this.catBreedRepostory.count();\r\n      const catBreeds = await this.catBreedRepostory.find({\r\n        take: +limit,\r\n        skip,\r\n        order: { createdAt: order },\r\n        relations: { author: true },\r\n      });\r\n\r\n      const response = paginatedResponse(catBreeds, +page, +limit, totalData);\r\n\r\n      res.json(response);\r\n    } catch (error) {\r\n      res.status(500).json({ message: getErrorMessage(error) });\r\n    }\r\n  };\r\n\r\n  public getCatBreedById = async (req: Request, res: Response) => {\r\n    try {\r\n      const { catBreedId } = req.params;\r\n      const catBreed = await this.catBreedRepostory.findOne({\r\n        where: { id: catBreedId },\r\n        relations: { author: true },\r\n      });\r\n\r\n      if (!catBreed) {\r\n        return res.status(404).json({ message: \"Cat race not found\" });\r\n      }\r\n\r\n      res.json(catBreed);\r\n    } catch (error) {\r\n      res.status(500).json({ message: getErrorMessage(error) });\r\n    }\r\n  };\r\n\r\n  public updateCatBreedById = async (req: Request, res: Response) => {\r\n    try {\r\n      const { id } = req.user!;\r\n      const { catBreedId } = req.params;\r\n      const catBreedData: Omit<CatBreed, \"author\"> = req.body;\r\n\r\n      await this.catBreedRepostory.update(catBreedId, {\r\n        author: { id },\r\n        ...catBreedData,\r\n      });\r\n\r\n      const updatedCatBreed = await this.catBreedRepostory.findOne({\r\n        where: { id: catBreedId },\r\n        relations: { author: true },\r\n      });\r\n\r\n      if (!updatedCatBreed) {\r\n        return res.status(404).json({ message: \"Cat race not found\" });\r\n      }\r\n\r\n      res.json({ message: \"Cat race updated\", data: updatedCatBreed });\r\n    } catch (error) {\r\n      res.status(500).json({ message: getErrorMessage(error) });\r\n    }\r\n  };\r\n\r\n  public deleteCatBreedById = async (req: Request, res: Response) => {\r\n    try {\r\n      const { catBreedId } = req.params;\r\n      const deletedCatBreed = await this.catBreedRepostory.delete(catBreedId);\r\n\r\n      res.json({ message: \"Cat race deleted\", data: deletedCatBreed });\r\n    } catch (error) {\r\n      res.status(500).json({ message: getErrorMessage(error) });\r\n    }\r\n  };\r\n}\r\n\r\nexport default new CatBreedController();\r\n"],"names":["CatBreedController","catBreedRepostory","myDataSource","getRepository","CatBreed","createCatBreed","req","res","catBreedData","body","newCatBreed","create","save","status","json","message","data","error","getErrorMessage","getCatBreeds","page","limit","order","query","skip","totalData","count","catBreeds","find","take","createdAt","relations","author","response","paginatedResponse","getCatBreedById","catBreedId","params","catBreed","findOne","where","id","updateCatBreedById","user","update","updatedCatBreed","deleteCatBreedById","deletedCatBreed","delete"],"mappings":"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"}