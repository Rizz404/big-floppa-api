{"version":3,"sources":["../../src/controllers/cat.controller.ts"],"sourcesContent":["import { Request, Response } from \"express\";\r\nimport myDataSource from \"../config/data-source\";\r\nimport getErrorMessage from \"../utils/getErrorMessage\";\r\nimport { Cat, CatStatus } from \"../entity/Cat.entity\";\r\nimport BaseReqQuery from \"../helpers/base.req.query.type\";\r\nimport paginatedResponse from \"../utils/paginatedResponse\";\r\n\r\ninterface CatQuery extends BaseReqQuery {\r\n  status?: CatStatus;\r\n}\r\n\r\nclass CatController {\r\n  private catRepostory = myDataSource.getRepository(Cat);\r\n\r\n  public createCat = async (req: Request, res: Response) => {\r\n    try {\r\n      const catData: Partial<Cat> = req.body;\r\n\r\n      const newCat = this.catRepostory.create(catData);\r\n\r\n      await this.catRepostory.save(newCat);\r\n\r\n      res.status(201).json({ message: \"Cat created\", data: newCat });\r\n    } catch (error) {\r\n      // todo: Buat type error\r\n      res.status(500).json({ message: getErrorMessage(error) });\r\n    }\r\n  };\r\n\r\n  public getCats = async (req: Request, res: Response) => {\r\n    try {\r\n      const {\r\n        page = 1,\r\n        limit = 10,\r\n        order = \"desc\",\r\n        status = CatStatus.AVAILABLE,\r\n      } = req.query as unknown as CatQuery;\r\n      const skip = (+page - 1) * +limit;\r\n\r\n      const totalData = await this.catRepostory.count({ where: { status } });\r\n      const cats = await this.catRepostory.find({\r\n        where: { status },\r\n        take: +limit,\r\n        skip,\r\n        order: { createdAt: order },\r\n        relations: { user: true, catBreed: true, catPictures: true },\r\n      });\r\n\r\n      const response = paginatedResponse(cats, +page, +limit, totalData);\r\n      res.json(response);\r\n    } catch (error) {\r\n      res.status(500).json({ message: getErrorMessage(error) });\r\n    }\r\n  };\r\n\r\n  public getCatById = async (req: Request, res: Response) => {\r\n    try {\r\n      const { catId } = req.params;\r\n      const cat = await this.catRepostory.findOne({\r\n        where: { id: catId },\r\n        relations: { user: true, catBreed: true, catPictures: true },\r\n      });\r\n\r\n      if (!cat) {\r\n        return res.status(404).json({ message: \"Cat not found\" });\r\n      }\r\n\r\n      res.json(cat);\r\n    } catch (error) {\r\n      res.status(500).json({ message: getErrorMessage(error) });\r\n    }\r\n  };\r\n\r\n  public updateCatById = async (req: Request, res: Response) => {\r\n    try {\r\n      const { catId } = req.params;\r\n      const catData: Cat = req.body;\r\n\r\n      await this.catRepostory.update(catId, catData);\r\n\r\n      const updatedCat = await this.catRepostory.findOne({\r\n        where: { id: catId },\r\n        relations: { user: true, catBreed: true, catPictures: true },\r\n      });\r\n\r\n      if (!updatedCat) {\r\n        return res.status(404).json({ message: \"Cat not found\" });\r\n      }\r\n\r\n      res.json({ message: \"Cat updated\", data: updatedCat });\r\n    } catch (error) {\r\n      res.status(500).json({ message: getErrorMessage(error) });\r\n    }\r\n  };\r\n\r\n  public deleteCatById = async (req: Request, res: Response) => {\r\n    try {\r\n      const { catId } = req.params;\r\n      const deletedCat = await this.catRepostory.delete(catId);\r\n\r\n      res.json({ message: \"Cat deleted\", data: deletedCat });\r\n    } catch (error) {\r\n      res.status(500).json({ message: getErrorMessage(error) });\r\n    }\r\n  };\r\n}\r\n\r\nexport default new CatController();\r\n"],"names":["CatController","catRepostory","myDataSource","getRepository","Cat","createCat","req","res","catData","body","newCat","create","save","status","json","message","data","error","getErrorMessage","getCats","page","limit","order","CatStatus","AVAILABLE","query","skip","totalData","count","where","cats","find","take","createdAt","relations","user","catBreed","catPictures","response","paginatedResponse","getCatById","catId","params","cat","findOne","id","updateCatById","update","updatedCat","deleteCatById","deletedCat","delete"],"mappings":"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"}