{"version":3,"sources":["../../src/dto/order.dto.ts"],"sourcesContent":["import { IsEnum, IsNotEmpty, IsNumber, IsUUID } from \"class-validator\";\r\n\r\nexport enum OrderStatus {\r\n  PACKAGING = \"PACKAGING\",\r\n  SHIPPED = \"SHIPPED\",\r\n  DELIVERED = \"DELIVERED\",\r\n  RECEIVED = \"RECEIVED\",\r\n}\r\n\r\nexport class CreateOrderDto {\r\n  @IsNotEmpty({ message: \"Status required\" })\r\n  @IsEnum(OrderStatus, {\r\n    message: \"Must be packaging, shipped, delivered, or recieved\",\r\n  })\r\n  status: OrderStatus;\r\n\r\n  @IsNotEmpty({ message: \"Amount required\" })\r\n  @IsNumber({}, { message: \"Must be a number\" })\r\n  amount: number;\r\n\r\n  @IsNotEmpty({ message: \"User required\" })\r\n  @IsUUID(\"4\", { message: \"Must be UUID\" })\r\n  user: string;\r\n\r\n  @IsNotEmpty({ message: \"Cat required\" })\r\n  @IsUUID(\"4\", { message: \"Must be UUID\" })\r\n  cat: string;\r\n\r\n  @IsNotEmpty({ message: \"Shipping Service required\" })\r\n  @IsUUID(\"4\", { message: \"Must be UUID\" })\r\n  shippingService: string;\r\n\r\n  @IsNotEmpty({ message: \"Transaction required\" })\r\n  @IsUUID(\"4\", { message: \"Must be UUID\" })\r\n  transaction: string;\r\n}\r\n"],"names":["CreateOrderDto","OrderStatus","status","amount","user","cat","shippingService","transaction","message"],"mappings":"8LASaA,cAAc,mBAAdA,2FATwC,+dAEzCC,6JAAAA,cAAAA,gBAOL,OAAMD,eACX,AAIAE,MAAoB,AAEpB,CAEAC,MAAe,AAEf,CAEAC,IAAa,AAEb,CAEAC,GAAY,AAEZ,CAEAC,eAAwB,AAExB,CAEAC,WAAoB,AACtB,+CAzBgBC,QAAS,4DAErBA,QAAS,gJAIGA,QAAS,qDACPA,QAAS,8GAGXA,QAAS,kDACRA,QAAS,wGAGVA,QAAS,iDACRA,QAAS,uGAGVA,QAAS,8DACRA,QAAS,mHAGVA,QAAS,yDACRA,QAAS"}