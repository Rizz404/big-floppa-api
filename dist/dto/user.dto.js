Object.defineProperty(exports,"__esModule",{value:true});function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{CreateUserDto:function(){return CreateUserDto},LoginDto:function(){return LoginDto},UpdateUserDto:function(){return UpdateUserDto},UpdateUserPasswordDto:function(){return UpdateUserPasswordDto},UpdateUserRoleDto:function(){return UpdateUserRoleDto},UserQueryDto:function(){return UserQueryDto}});const _basequerydto=_interop_require_default(require("../utils/base.query.dto"));const _classvalidator=require("class-validator");const _profiledto=require("./profile.dto");const _Userentity=require("../entity/User.entity");function _interop_require_default(obj){return obj&&obj.__esModule?obj:{default:obj}}function _ts_decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r}class CreateUserDto{username;email;password}_ts_decorate([(0,_classvalidator.IsNotEmpty)({message:"Username is required"}),(0,_classvalidator.Length)(4,20,{message:"Username must be between 4 and 20 characters"})],CreateUserDto.prototype,"username",void 0);_ts_decorate([(0,_classvalidator.IsNotEmpty)({message:"Email is required"}),(0,_classvalidator.IsEmail)({},{message:"Invalid email format"})],CreateUserDto.prototype,"email",void 0);_ts_decorate([(0,_classvalidator.IsOptional)(),(0,_classvalidator.Length)(6,100,{message:"Password must be between 6 and 100 characters"})],CreateUserDto.prototype,"password",void 0);class LoginDto{username;email;password}_ts_decorate([(0,_classvalidator.ValidateIf)(o=>!o.email),(0,_classvalidator.IsNotEmpty)({message:"Username is required"}),(0,_classvalidator.Length)(4,20,{message:"Username must be between 4 and 20 characters"})],LoginDto.prototype,"username",void 0);_ts_decorate([(0,_classvalidator.ValidateIf)(o=>!o.username),(0,_classvalidator.IsNotEmpty)({message:"Email is required"}),(0,_classvalidator.IsEmail)({},{message:"Invalid email format"})],LoginDto.prototype,"email",void 0);_ts_decorate([(0,_classvalidator.IsNotEmpty)({message:"Password is required"}),(0,_classvalidator.Length)(6,100,{message:"Password must be between 6 and 100 characters"})],LoginDto.prototype,"password",void 0);class UpdateUserDto extends _profiledto.UpdateProfileDto{username;email}_ts_decorate([(0,_classvalidator.IsOptional)(),(0,_classvalidator.IsNotEmpty)({message:"Username is required"}),(0,_classvalidator.Length)(4,20,{message:"Username must be between 4 and 20 characters"})],UpdateUserDto.prototype,"username",void 0);_ts_decorate([(0,_classvalidator.IsOptional)(),(0,_classvalidator.IsNotEmpty)({message:"Email is required"}),(0,_classvalidator.IsEmail)({},{message:"Invalid email format"})],UpdateUserDto.prototype,"email",void 0);class UpdateUserPasswordDto{oldPassword;newPassword}_ts_decorate([(0,_classvalidator.IsNotEmpty)({message:"Old password is required"}),(0,_classvalidator.Length)(6,100,{message:"Old password must be between 6 and 100 characters"})],UpdateUserPasswordDto.prototype,"oldPassword",void 0);_ts_decorate([(0,_classvalidator.IsNotEmpty)({message:"New password is required"}),(0,_classvalidator.Length)(6,100,{message:"NewPassword password must be between 6 and 100 characters"})],UpdateUserPasswordDto.prototype,"newPassword",void 0);class UpdateUserRoleDto{role}_ts_decorate([(0,_classvalidator.IsNotEmpty)(),(0,_classvalidator.IsEnum)(_Userentity.UserRole,{message:"Role must be admin or user"})],UpdateUserRoleDto.prototype,"role",void 0);class UserQueryDto extends _basequerydto.default{role;isOauth;isVerified}_ts_decorate([(0,_classvalidator.IsOptional)(),(0,_classvalidator.IsEnum)(_Userentity.UserRole,{message:"Role must be admin or user"})],UserQueryDto.prototype,"role",void 0);_ts_decorate([(0,_classvalidator.IsBooleanString)(),(0,_classvalidator.IsOptional)()],UserQueryDto.prototype,"isOauth",void 0);_ts_decorate([(0,_classvalidator.IsBooleanString)(),(0,_classvalidator.IsOptional)()],UserQueryDto.prototype,"isVerified",void 0);
//# sourceMappingURL=user.dto.js.map