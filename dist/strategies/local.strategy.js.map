{"version":3,"sources":["../../src/strategies/local.strategy.ts"],"sourcesContent":["import passport, { PassportStatic } from \"passport\";\r\nimport { Strategy as LocalStrategy } from \"passport-local\";\r\nimport { User } from \"../entity/User.entity\";\r\nimport myDataSource from \"../config/data-source\";\r\nimport bcrypt from \"bcrypt\";\r\n\r\npassport.serializeUser((user, done) => {\r\n  done(null, user.id);\r\n});\r\n\r\npassport.deserializeUser(async (id: string, done) => {\r\n  try {\r\n    const userRepository = myDataSource.getRepository(User);\r\n    const user = await userRepository.findOne({ where: { id } });\r\n\r\n    if (!user) {\r\n      throw new Error(\"User not found\");\r\n    }\r\n\r\n    done(null, user);\r\n  } catch (error) {\r\n    done(error, null);\r\n  }\r\n});\r\n\r\nconst localStrategy = (passport: PassportStatic) => {\r\n  passport.use(\r\n    new LocalStrategy(async (username, password, done) => {\r\n      try {\r\n        const userRepository = myDataSource.getRepository(User);\r\n        const user = await userRepository.findOne({ where: { username } });\r\n\r\n        if (!user) {\r\n          throw new Error(\"User not found\");\r\n        }\r\n\r\n        const passwordMatch = await bcrypt.compare(password, user.password!);\r\n\r\n        if (!passwordMatch) {\r\n          throw new Error(\"Password not match\");\r\n        }\r\n        done(null, user);\r\n      } catch (error) {\r\n        done(error, false);\r\n      }\r\n    })\r\n  );\r\n};\r\n\r\nexport default localStrategy;\r\n"],"names":["passport","serializeUser","user","done","id","deserializeUser","userRepository","myDataSource","getRepository","User","findOne","where","Error","error","localStrategy","use","LocalStrategy","username","password","passwordMatch","bcrypt","compare"],"mappings":"uFAiDA,iDAAA,6DAjDyC,0CACC,4CACrB,4EACI,yEACN,+FAEnBA,iBAAQ,CAACC,aAAa,CAAC,CAACC,KAAMC,QAC5BA,KAAK,KAAMD,KAAKE,EAAE,CACpB,GAEAJ,iBAAQ,CAACK,eAAe,CAAC,MAAOD,GAAYD,QAC1C,GAAI,CACF,MAAMG,eAAiBC,mBAAY,CAACC,aAAa,CAACC,gBAAI,EACtD,MAAMP,KAAO,MAAMI,eAAeI,OAAO,CAAC,CAAEC,MAAO,CAAEP,EAAG,CAAE,GAE1D,GAAI,CAACF,KAAM,CACT,MAAM,IAAIU,MAAM,iBAClB,CAEAT,KAAK,KAAMD,KACb,CAAE,MAAOW,MAAO,CACdV,KAAKU,MAAO,KACd,CACF,GAEA,MAAMC,cAAgB,AAACd,WACrBA,SAASe,GAAG,CACV,IAAIC,uBAAa,CAAC,MAAOC,SAAUC,SAAUf,QAC3C,GAAI,CACF,MAAMG,eAAiBC,mBAAY,CAACC,aAAa,CAACC,gBAAI,EACtD,MAAMP,KAAO,MAAMI,eAAeI,OAAO,CAAC,CAAEC,MAAO,CAAEM,QAAS,CAAE,GAEhE,GAAI,CAACf,KAAM,CACT,MAAM,IAAIU,MAAM,iBAClB,CAEA,MAAMO,cAAgB,MAAMC,eAAM,CAACC,OAAO,CAACH,SAAUhB,KAAKgB,QAAQ,EAElE,GAAI,CAACC,cAAe,CAClB,MAAM,IAAIP,MAAM,qBAClB,CACAT,KAAK,KAAMD,KACb,CAAE,MAAOW,MAAO,CACdV,KAAKU,MAAO,MACd,CACF,GAEJ,QAEA,SAAeC"}