{"version":3,"sources":["../../src/strategies/jwt.strategy.ts"],"sourcesContent":["import {\r\n  ExtractJwt,\r\n  Strategy as JwtStrategy,\r\n  StrategyOptions,\r\n} from \"passport-jwt\";\r\nimport { PassportStatic } from \"passport\";\r\nimport { User as UserModel } from \"../entity/User.entity\";\r\nimport myDataSource from \"../config/data-source\";\r\n\r\ndeclare global {\r\n  namespace Express {\r\n    interface User extends UserModel {}\r\n  }\r\n}\r\n\r\nconst options: StrategyOptions = {\r\n  jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\r\n  secretOrKey: process.env.ACCESS_TOKEN || \"secret\",\r\n};\r\n\r\nconst jwtStrategy = (passport: PassportStatic) => {\r\n  passport.use(\r\n    new JwtStrategy(options, async (payload, done) => {\r\n      try {\r\n        const userRepository = myDataSource.getRepository(UserModel);\r\n        const user = await userRepository.findOne({\r\n          where: { id: payload.id },\r\n          relations: { profile: true },\r\n        });\r\n\r\n        if (!user) {\r\n          return done(null, false);\r\n        }\r\n\r\n        return done(null, user);\r\n      } catch (error) {\r\n        return done(error, false);\r\n      }\r\n    })\r\n  );\r\n};\r\n\r\nexport default jwtStrategy;\r\n"],"names":["options","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","process","env","ACCESS_TOKEN","jwtStrategy","passport","use","JwtStrategy","payload","done","userRepository","myDataSource","getRepository","UserModel","user","findOne","where","id","relations","profile","error"],"mappings":"uFA0CA,iDAAA,uCAtCO,0CAE2B,4EACT,8GAQzB,MAAMA,QAA2B,CAC/BC,eAAgBC,uBAAU,CAACC,2BAA2B,GACtDC,YAAaC,QAAQC,GAAG,CAACC,YAAY,EAAI,QAC3C,EAEA,MAAMC,YAAc,AAACC,WACnBA,SAASC,GAAG,CACV,IAAIC,qBAAW,CAACX,QAAS,MAAOY,QAASC,QACvC,GAAI,CACF,MAAMC,eAAiBC,mBAAY,CAACC,aAAa,CAACC,gBAAS,EAC3D,MAAMC,KAAO,MAAMJ,eAAeK,OAAO,CAAC,CACxCC,MAAO,CAAEC,GAAIT,QAAQS,EAAE,AAAC,EACxBC,UAAW,CAAEC,QAAS,IAAK,CAC7B,GAEA,GAAI,CAACL,KAAM,CACT,OAAOL,KAAK,KAAM,MACpB,CAEA,OAAOA,KAAK,KAAMK,KACpB,CAAE,MAAOM,MAAO,CACd,OAAOX,KAAKW,MAAO,MACrB,CACF,GAEJ,QAEA,SAAehB"}