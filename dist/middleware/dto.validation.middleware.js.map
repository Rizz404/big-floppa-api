{"version":3,"sources":["../../src/middleware/dto.validation.middleware.ts"],"sourcesContent":["import getErrorMessage from \"../utils/getErrorMessage\";\r\nimport { plainToInstance } from \"class-transformer\";\r\nimport { validateOrReject } from \"class-validator\";\r\nimport { NextFunction, Request, Response } from \"express\";\r\n\r\nconst validateDto = (validate: \"body\" | \"query\", dtoClass: any) => {\r\n  return async (req: Request, res: Response, next: NextFunction) => {\r\n    try {\r\n      let dtoInstance: unknown[];\r\n\r\n      if (validate === \"body\") {\r\n        dtoInstance = plainToInstance(dtoClass, req.body);\r\n      } else {\r\n        dtoInstance = plainToInstance(dtoClass, req.query);\r\n      }\r\n\r\n      await validateOrReject(dtoInstance);\r\n      next();\r\n    } catch (error) {\r\n      res.status(500).json({ message: getErrorMessage(error) });\r\n    }\r\n  };\r\n};\r\n\r\nexport default validateDto;\r\n"],"names":["validateDto","validate","dtoClass","req","res","next","dtoInstance","plainToInstance","body","query","validateOrReject","error","status","json","message","getErrorMessage"],"mappings":"uFAwBA,iDAAA,oEAxB4B,6DACI,mDACC,uGAGjC,MAAMA,YAAc,CAACC,SAA4BC,YAC/C,OAAO,MAAOC,IAAcC,IAAeC,QACzC,GAAI,CACF,IAAIC,YAEJ,GAAIL,WAAa,OAAQ,CACvBK,YAAcC,GAAAA,iCAAe,EAACL,SAAUC,IAAIK,IAAI,CAClD,KAAO,CACLF,YAAcC,GAAAA,iCAAe,EAACL,SAAUC,IAAIM,KAAK,CACnD,CAEA,MAAMC,GAAAA,gCAAgB,EAACJ,aACvBD,MACF,CAAE,MAAOM,MAAO,CACdP,IAAIQ,MAAM,CAAC,KAAKC,IAAI,CAAC,CAAEC,QAASC,GAAAA,wBAAe,EAACJ,MAAO,EACzD,CACF,CACF,QAEA,SAAeX"}