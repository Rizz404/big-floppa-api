{"version":3,"sources":["../../src/routes/user.route.ts"],"sourcesContent":["import userController from \"../controllers/user.controller\";\r\nimport {\r\n  CreateUserDto,\r\n  UpdateUserDto,\r\n  UpdateUserPasswordDto,\r\n  UpdateUserRoleDto,\r\n  UserQueryDto,\r\n} from \"../dto/user.dto\";\r\nimport { UserRole } from \"../entity/User.entity\";\r\nimport { auth } from \"../middleware/auth.middleware\";\r\nimport validateDto from \"../middleware/dto.validation.middleware\";\r\nimport roleAccess from \"../middleware/role.access.middleware\";\r\nimport express from \"express\";\r\n\r\nconst router = express.Router();\r\n\r\nrouter\r\n  .route(\"/\")\r\n  .get(\r\n    auth,\r\n    roleAccess(UserRole.ADMIN),\r\n    validateDto(\"query\", UserQueryDto),\r\n    userController.getUsers\r\n  )\r\n  .post(\r\n    auth,\r\n    roleAccess(UserRole.ADMIN),\r\n    validateDto(\"body\", CreateUserDto),\r\n    userController.createUser\r\n  );\r\nrouter\r\n  .route(\"/profile\")\r\n  .get(auth, (req, res) => {\r\n    res.json(req.user);\r\n  })\r\n  .patch(\r\n    auth,\r\n    validateDto(\"body\", UpdateUserDto),\r\n    userController.updateUserProfile\r\n  );\r\nrouter.patch(\r\n  \"/update-role/:userId\",\r\n  auth,\r\n  roleAccess(UserRole.ADMIN),\r\n  validateDto(\"body\", UpdateUserRoleDto),\r\n  userController.updateUserRole\r\n);\r\nrouter.patch(\r\n  \"/verify/:userId\",\r\n  auth,\r\n  roleAccess(UserRole.ADMIN),\r\n  userController.verifiedUser\r\n);\r\nrouter.patch(\r\n  \"/update-password\",\r\n  auth,\r\n  validateDto(\"body\", UpdateUserPasswordDto),\r\n  userController.updateUserPassword\r\n);\r\nrouter\r\n  .route(\"/:userId\")\r\n  .get(userController.getUserById)\r\n  .delete(auth, roleAccess(UserRole.ADMIN), userController.deleteUserById);\r\n\r\nexport { router as userRouter };\r\n"],"names":["userRouter","router","express","Router","route","get","auth","roleAccess","UserRole","ADMIN","validateDto","UserQueryDto","userController","getUsers","post","CreateUserDto","createUser","req","res","json","user","patch","UpdateUserDto","updateUserProfile","UpdateUserRoleDto","updateUserRole","verifiedUser","UpdateUserPasswordDto","updateUserPassword","getUserById","delete","deleteUserById"],"mappings":"uFAgEmBA,oDAAVC,iEAhEkB,0DAOpB,6CACkB,uDACJ,iGACG,yGACD,yFACH,gGAEpB,MAAMA,OAASC,gBAAO,CAACC,MAAM,GAE7BF,OACGG,KAAK,CAAC,KACNC,GAAG,CACFC,oBAAI,CACJC,GAAAA,6BAAU,EAACC,oBAAQ,CAACC,KAAK,EACzBC,GAAAA,gCAAW,EAAC,QAASC,qBAAY,EACjCC,uBAAc,CAACC,QAAQ,EAExBC,IAAI,CACHR,oBAAI,CACJC,GAAAA,6BAAU,EAACC,oBAAQ,CAACC,KAAK,EACzBC,GAAAA,gCAAW,EAAC,OAAQK,sBAAa,EACjCH,uBAAc,CAACI,UAAU,EAE7Bf,OACGG,KAAK,CAAC,YACNC,GAAG,CAACC,oBAAI,CAAE,CAACW,IAAKC,OACfA,IAAIC,IAAI,CAACF,IAAIG,IAAI,CACnB,GACCC,KAAK,CACJf,oBAAI,CACJI,GAAAA,gCAAW,EAAC,OAAQY,sBAAa,EACjCV,uBAAc,CAACW,iBAAiB,EAEpCtB,OAAOoB,KAAK,CACV,uBACAf,oBAAI,CACJC,GAAAA,6BAAU,EAACC,oBAAQ,CAACC,KAAK,EACzBC,GAAAA,gCAAW,EAAC,OAAQc,0BAAiB,EACrCZ,uBAAc,CAACa,cAAc,EAE/BxB,OAAOoB,KAAK,CACV,kBACAf,oBAAI,CACJC,GAAAA,6BAAU,EAACC,oBAAQ,CAACC,KAAK,EACzBG,uBAAc,CAACc,YAAY,EAE7BzB,OAAOoB,KAAK,CACV,mBACAf,oBAAI,CACJI,GAAAA,gCAAW,EAAC,OAAQiB,8BAAqB,EACzCf,uBAAc,CAACgB,kBAAkB,EAEnC3B,OACGG,KAAK,CAAC,YACNC,GAAG,CAACO,uBAAc,CAACiB,WAAW,EAC9BC,MAAM,CAACxB,oBAAI,CAAEC,GAAAA,6BAAU,EAACC,oBAAQ,CAACC,KAAK,EAAGG,uBAAc,CAACmB,cAAc"}